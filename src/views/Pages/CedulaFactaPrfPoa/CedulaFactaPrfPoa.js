import React, { Component } from 'react';
import { Card, CardBody, Col, Container, Row, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Button } from 'reactstrap';
import Moment from "react-moment";
import domtoimage from 'dom-to-image';
import {isMobile} from 'react-device-detect';

import LayoutFactaHeader from '../../../LayoutFactaHeader';
import LayoutFactaCarregando from '../../../LayoutFactaCarregando';
import PaginaMensagemLocalizacao from '../../../PaginaMensagemLocalizacao';

import DadosDaPropostaTemplate from '../../../DadosDaPropostaTemplate';
import DadosDaPropostaBlocoTemplate from '../../../DadosDaPropostaBlocoTemplate';
import DadosDaPropostaVinculadaTemplate from '../../../DadosDaPropostaVinculadaTemplate';
import DadosDoClienteTemplate from '../../../DadosDoClienteTemplate';
import DadosDoCorretorTemplate from '../../../DadosDoCorretorTemplate';
import TimelineProgresso from '../../TimelineProgresso';

class CedulaFactaPrfPoa extends Component {

 constructor(props) {
  super(props);
  //
  this.state = {
   fadeIn: true,
   timeout: 300,
   tipoPendencia: props.tipo,
   homeLink: '/digital/'+this.props.match.params.propostaId,
   homeLinkPendencias: '/pendencias/'+this.props.match.params.propostaId,
   homeLinkRegularizacao: '/regularizacao/'+this.props.match.params.propostaId,
   propostaINSS: true,
   base64Ccb: '',
   clicou: false,
   fontSizeControle: '0.875rem',

   aceitouSeguro: true,
   dataHoraAceitouSeguro: [new Date().getFullYear(), new Date().getMonth()+1, new Date().getDate()].join('-')+' '+[new Date().getHours(),new Date().getMinutes(),new Date().getSeconds()].join(':'),

   aceitouConta: true,
   dataHoraAceitouConta: [new Date().getFullYear(), new Date().getMonth()+1, new Date().getDate()].join('-')+' '+[new Date().getHours(),new Date().getMinutes(),new Date().getSeconds()].join(':'),

   aceitouConsultaDataprev: true,
   dataHoraAceitouDataprev: [new Date().getFullYear(), new Date().getMonth()+1, new Date().getDate()].join('-')+' '+[new Date().getHours(),new Date().getMinutes(),new Date().getSeconds()].join(':'),

   aceitouAutTransferencia: true,
   dataHoraAceitouAutTransferencia: [new Date().getFullYear(), new Date().getMonth()+1, new Date().getDate()].join('-')+' '+[new Date().getHours(),new Date().getMinutes(),new Date().getSeconds()].join(':'),

   aceitouAutBoletos: true,
   dataHoraAceitouAutBoletos: [new Date().getFullYear(), new Date().getMonth()+1, new Date().getDate()].join('-')+' '+[new Date().getHours(),new Date().getMinutes(),new Date().getSeconds()].join(':'),

   carregando: true,
   proximoLink: '',
   linkPropostaPendente: '/proposta-pendente/'+this.props.match.params.propostaId,
   permissaoLocalizacao: true,
   localizacaoCcb: '',
   diaAtual: new Date().getDate(),
   anoAtual: new Date().getFullYear(),
   mesAtual: new Date().toLocaleString('default', { month: 'long' }),
   labelSeguroSim: 'X',
   labelSeguroNao: '',
   mdlLgConta: false,
   mdlLgSeguro: false,
   tipoFormalizacao: 'normal',
   obj_pendencias: [],
   vlrSeguro : 0
  };

  if (this.props.location.state === undefined) {
   if (window.location.href.indexOf("/pendencias-") !== -1) {
    this.props.history.push(this.state.homeLinkPendencias);
   }
   else if (window.location.href.indexOf("/regularizacao-") !== -1) {
    this.props.history.push(this.state.homeLinkRegularizacao);
   }
   else {
    this.props.history.push(this.state.homeLink);
   }
   return false;
  }

  this.toggleModalAbertura = this.toggleModalAbertura.bind(this);
  this.toggleModalSeguro = this.toggleModalSeguro.bind(this);

   var _state = this.props.location.state;
   var PRINCIPAL;
   var DADOS_STATE_TERMO;
   if (this.state.tipoPendencia == "normal") {
    PRINCIPAL = _state.DADOS_STATE_TERMO.DADOS_PROPOSTA_DIGITAL;
    DADOS_STATE_TERMO = _state.DADOS_STATE_TERMO;
   }
   else {
    PRINCIPAL = _state.obj_pendencias;
   }

   this.state.obj_proposta  = PRINCIPAL;
   this.state.obj_vinculadas = PRINCIPAL.PROPOSTA_VINCULADA;
   this.state.obj_corretor  = PRINCIPAL.CORRETOR;
   this.state.obj_cliente  = PRINCIPAL.CLIENTE;
   this.state.obj_banco   = PRINCIPAL.BANCO;
   this.state.obj_contratos = PRINCIPAL.CONTRATOSREFIN;
   this.state.espBeneficio  = PRINCIPAL.ESPECIEBENEFICIO;
   this.state.tipoOperacao  = PRINCIPAL.TIPOOPERACAO;

   this.state.aceitouSeguro = PRINCIPAL.VLRSEGURO !== undefined && parseFloat(PRINCIPAL.VLRSEGURO !== '' && PRINCIPAL.VLRSEGURO !== null ? PRINCIPAL.VLRSEGURO : 0) > 0 ? true : false;
   this.state.vlrSeguro = PRINCIPAL.VLRSEGURO !== undefined && parseFloat(PRINCIPAL.VLRSEGURO !== '' && PRINCIPAL.VLRSEGURO !== null ? PRINCIPAL.VLRSEGURO : 0) > 0 ? PRINCIPAL.VLRSEGURO : 0;

   if (this.state.aceitouSeguro === false) {
     this.state.labelSeguroSim = '';
     this.state.labelSeguroNao = 'X';
   }

   //### DADOS DA PRIMEIRA TELA (Digital.js)
   this.state.dataHoraPrimeiraTela     = _state.dataHoraPrimeiraTela !== undefined     ? _state.dataHoraPrimeiraTela : '';
   this.state.geoInicial               = _state.geoInicial !== undefined               ? _state.geoInicial : '';

   //### DADOS DO TERMO (Termo.js)
   this.state.dataHoraTermo            = _state.dataHoraTermo !== undefined            ? _state.dataHoraTermo : '';
   this.state.geoTermo                 = _state.geoTermo !== undefined                 ? _state.geoTermo : '';

   if (this.state.tipoPendencia !== "normal") {
    this.state.homeLink = '/'+this.state.tipoPendencia+'/'+this.props.match.params.propostaId;
    this.state.tipoFormalizacao = 'pendencias';
    this.state.obj_pendencias = _state.obj_pendencias;
    if (PRINCIPAL.pendencia_de_documentos === true) {
     this.state.proximoLink = '/'+this.state.tipoPendencia+'-tipo-documento/'+this.props.match.params.propostaId;
    }
    else if (PRINCIPAL.pendencia_de_selfie === true) {
     this.state.proximoLink = '/'+this.state.tipoPendencia+'-selfie/'+this.props.match.params.propostaId;
    }
    else if (PRINCIPAL.pendencia_de_audio === true) {
     this.state.proximoLink = '/'+this.state.tipoPendencia+'-gravacao-de-audio/'+this.props.match.params.propostaId;
    }
   }
   else {
     //this.state.proximoLink = '/tipo-documento/'+this.props.match.params.propostaId; // Rota antiga para jÃ¡ tirar foto dos DOCS
     this.state.proximoLink = '/declaracao-de-residencia/'+this.props.match.params.propostaId;
   }

 }

 toggleModalAbertura() {
  this.setState({
   mdlLgConta: !this.state.mdlLgConta,
  });
 }

 toggleModalSeguro() {
  this.setState({
   mdlLgSeguro: !this.state.mdlLgSeguro,
  });
 }

 handleChange = e => {
  const { name, value } = e.target;
  if (name === "rd_seguro_prestamista") {
   this.setState({
    aceitouSeguro: value === "0" ? false : true,
    labelSeguroSim: value === "0" ? '' : 'X',
    labelSeguroNao: value === "0" ? 'X' : '',
    dataHoraAceitouSeguro: [new Date().getFullYear(), new Date().getMonth()+1, new Date().getDate()].join('-')+' '+[new Date().getHours(),new Date().getMinutes(),new Date().getSeconds()].join(':')
   });
  }
  else if (name === 'autorizacao_dataprev') {
   this.setState({
    aceitouConsultaDataprev: this.state.aceitouConsultaDataprev === true ? false : true,
    dataHoraAceitouDataprev: [new Date().getFullYear(), new Date().getMonth()+1, new Date().getDate()].join('-')+' '+[new Date().getHours(),new Date().getMinutes(),new Date().getSeconds()].join(':')
   });
  }
  else if (name === 'autorizacao_transferencias') {
   this.setState({
    aceitouAutTransferencia: this.state.aceitouAutTransferencia === true ? false : true,
    dataHoraAceitouAutTransferencia: [new Date().getFullYear(), new Date().getMonth()+1, new Date().getDate()].join('-')+' '+[new Date().getHours(),new Date().getMinutes(),new Date().getSeconds()].join(':')
   });
  }
  else if (name === 'autorizacao_boletos') {
   this.setState({
    aceitouAutBoletos: this.state.aceitouAutBoletos === true ? false : true,
    dataHoraAceitouAutBoletos: [new Date().getFullYear(), new Date().getMonth()+1, new Date().getDate()].join('-')+' '+[new Date().getHours(),new Date().getMinutes(),new Date().getSeconds()].join(':')
   });
  }
  else if (name === 'autorizacao_abertura') {
   this.setState({
    aceitouConta: this.state.aceitouConta === true ? false : true,
    dataHoraAceitouConta: [new Date().getFullYear(), new Date().getMonth()+1, new Date().getDate()].join('-')+' '+[new Date().getHours(),new Date().getMinutes(),new Date().getSeconds()].join(':')
   });
  }

 };

 componentDidMount() {
  this.setState({ carregando : false });
  setTimeout(() => {window.scrollTo(0, 3)}, 100);
  navigator.geolocation.getCurrentPosition(
   function(position) {
    this.setState({ localizacaoCcb: "https://www.google.com/maps/place/" + position.coords.latitude + "," + position.coords.longitude, permissaoLocalizacao: true });
   }.bind(this),
   function(error) {
    this.setState({ permissaoLocalizacao: false });
   }.bind(this)
  );
 }

 validaPropostaINSS(vinculada) {
  if (vinculada.Averbador === 3) {
   this.state.propostaINSS = true;
  }
 }

 salvaImgCcb = async () => {
  this.setState({clicou: true});

  if (this.state.aceitouSeguro === false && (this.state.vlrSeguro > 0)) {
    this.props.history.push({
      pathname: this.state.linkPropostaPendente,
      search: '',
      state: {
        navegacao: true,
        obj_proposta: this.state.obj_proposta
      }
    });
    return false;
  }
  else {

   this.setState({ fontSizeControle : '0.650rem' });
   var node = document.getElementById('ccbCliente');
   var timelineRemover = node.querySelector('#divTimeline');
   if (timelineRemover !== undefined && timelineRemover !== null) {
     timelineRemover.remove();
   }
   localStorage.setItem('@app-factafinanceira-formalizacao/dados_html_ccb', node.innerHTML);
   // node.style = null;
   await domtoimage.toPng(node)
   .then(function (dataUrl) {
    this.setState({base64Ccb : dataUrl})
   }.bind(this))
   .catch(function (error) {
    console.error('oops, something went wrong!', JSON.stringify(error));
   }).finally(function (){
    this.props.history.push({
     pathname: this.state.proximoLink,
     search: '',
     state: {
      navegacao: true,
      obj_proposta: this.state.obj_proposta,
      base64Ccb: this.state.base64Ccb,
      dataHoraPrimeiraTela: this.state.dataHoraPrimeiraTela,
      dataHoraTermo: this.state.dataHoraTermo,
      dataHoraCcb: [new Date().getFullYear(), new Date().getMonth()+1, new Date().getDate()].join('-')+' '+[new Date().getHours(),new Date().getMinutes(),new Date().getSeconds()].join(':'),
      geoInicial: this.state.geoInicial,
      geoTermo: this.state.geoTermo,
      geoCcb: this.state.localizacaoCcb,

      aceitouSeguro: this.state.aceitouSeguro,
      dataHoraAceitouSeguro: this.state.dataHoraAceitouSeguro,

      aceitouConsultaDataprev: this.state.aceitouConsultaDataprev,
      dataHoraAceitouDataprev: this.state.dataHoraAceitouDataprev,

      aceitouConta: this.state.aceitouConta,
      dataHoraAceitouConta: this.state.dataHoraAceitouConta,

      aceitouAutTransferencia: this.state.aceitouAutTransferencia,
      dataHoraAceitouAutTransferencia: this.state.dataHoraAceitouAutTransferencia,

      aceitouAutBoletos: this.state.aceitouAutBoletos,
      dataHoraAceitouAutBoletos: this.state.dataHoraAceitouAutBoletos,
      base64Ccb: this.state.base64Ccb,
      obj_pendencias: this.state.obj_pendencias,
      tipoFormalizacao: this.state.tipoFormalizacao
     }
    });
   }.bind(this));
  }

 }

 render() {
    const iconWarning = {
       "color" : "red"
    }

   const appHeightAuto = {
     "height": "auto",
     "overflowY" : !isMobile ? "hidden" : "unset",
     "overflowX" : !isMobile ? "hidden" : "unset"
   };

  const containerPaddingTop = {
   "paddingTop": "5%",
   "display": 'block',
   "background": 'linear-gradient(-45deg, #B0DACC 0%, #3D8EB9 60%)',
   "fontFamily": 'Montserrat,sans-serif',
   "letterSpacing" : '-1px',
   "fontSize" : this.state.fontSizeControle
  };

  let formatoValor = { minimumFractionDigits: 2 , style: 'currency', currency: 'BRL' }

  // VariÃ¡veis da AF principal
  if (this.state.obj_proposta !== undefined) {
   var AF = (this.state.tipoPendencia === "normal") ? this.state.obj_proposta : this.state.obj_pendencias.PROPOSTA;
   var CODIGO = this.state.obj_proposta.CODIGO;
   var COD_TP_OPERACAO = parseInt(this.state.obj_proposta.Tipo_Operacao);
   var TIPO_OPERACAO = this.state.tipoOperacao !== undefined ? this.state.tipoOperacao.nome : '';
   var DATA_INI_PROPOSTA = this.state.obj_proposta.DATAINICIO;
   var DATA_FIM_PROPOSTA = this.state.obj_proposta.DATAFIM;
  }

  return (
   <div className="app align-items-center" style={appHeightAuto} >

   { this.state.carregando
    ? <LayoutFactaCarregando />
    : ( this.state.permissaoLocalizacao === true
     ?
      <>
      <Col className="w-100 p-3 min-vh-100 text-center" style={containerPaddingTop} id="ccbCliente">

        <LayoutFactaHeader />

        <Row className="mt-6">

          { isMobile === false
            ? <>
                <Col md="5" style={{ 'position' : 'relative' }}>
                    <img src={ require('../../../assets/img/logo_topo.png') } alt="Logo" style={{ 'marginTop' : '5%' }} />
                    <p className="text-white mb-3"><i className="fa fa-lock"></i> | Site seguro</p>
                    <TimelineProgresso
                      bemvindo="fa fa-check-square-o text-success"
                      uso="fa fa-check-square-o text-success"
                      proposta="fa fa-square-o"
                      residencia="fa fa-square-o"
                      fotos="fa fa-square-o"
                      audio="fa fa-square-o"
                    />
                </Col>
              </>
            : null
          }

          <Col md={{size: isMobile ? 10 : 6, offset: isMobile ? 1 : 0}} style={{ 'height' : (window.screen.height * 0.85), 'overflow' : isMobile ? "unset" : "auto" }}>

         <DadosDaPropostaTemplate proposta={AF} tipo_operacao={TIPO_OPERACAO} />

         <DadosDoClienteTemplate cliente={this.state.obj_cliente} />

         <Card className="border-white shadow" style={{borderRadius: '8px'}}>
          <CardBody className="text-left">
           <h5 className="text-center pb-4 border-bottom border-light">Dados Funcionais</h5>
           <Row>
            <Col xs="12" sm="12" xm="12">
             <label>ÃrgÃ£o</label>
             <p className="font-weight-bold">Prefeitura de Porto Alegre</p>
            </Col>
            <Col xs="12" sm="12" xm="12">
             <label>NÂº do BenefÃ­cio</label>
             <p className="font-weight-bold">{ AF.MATRICULA !== null ? AF.MATRICULA : ' - ' }</p>
            </Col>
           </Row>
          </CardBody>
         </Card>

         <Card className="border-white shadow" style={{borderRadius: '8px'}}>
          <CardBody className="text-left">
           <h5 className="text-center border-bottom border-light pb-3">Dados BancÃ¡rios</h5>
           <Row>
            <Col xs="12" sm="12" xm="12">
             <label>Banco</label>
             <p className="font-weight-bold"> { this.state.obj_banco.CODIGO !== undefined ? this.state.obj_banco.CODIGO.padStart(3, '0') + ' - ' + this.state.obj_banco.DESCRICAO : null }</p>
            </Col>
           </Row>
           <Row>
            <Col xs="6" sm="6" xm="12">
             <label>NÂº da AgÃªncia</label>
             <p className="font-weight-bold"> { AF.AGENCIA !== undefined ? AF.AGENCIA.padStart(6, '0') : null } </p>
            </Col>
            <Col xs="6" sm="6" xm="12">
             <label>NÂº da Conta</label>
             <p className="font-weight-bold"> { AF.CONTA !== undefined ? AF.CONTA.padStart(8, '0') : null } </p>
            </Col>
           </Row>
          </CardBody>
         </Card>

         <DadosDoCorretorTemplate corretor={this.state.obj_corretor} />

         <DadosDaPropostaBlocoTemplate proposta={AF} tipo_operacao={TIPO_OPERACAO} cod_tipo_operacao={COD_TP_OPERACAO}/>

         {
          this.state.obj_vinculadas !== undefined ? (
            Object.values(this.state.obj_vinculadas).map(item_vinculada => (
             <>
              <DadosDaPropostaVinculadaTemplate proposta={item_vinculada} tipo_operacao={item_vinculada.TIPOOPERACAO.nome} cod_tipo_operacao={item_vinculada.Tipo_Operacao}/>
             </>
            )
           )
          ) : null
         }


       
        <Card className="border-white shadow" style={{borderRadius: '8px'}}>
            <CardBody className="text-left">
              <h5 className="text-center border-bottom border-light pb-3 font-weight-bold"><i className="fa fa-warning" style={iconWarning}></i>  ATENÃÃO <i className="fa fa-warning red-color" style={iconWarning}></i></h5>
              <Col xs="12" sm="12" xm="12">
                <Label check className="form-check-label text-justify">
                A <strong>Facta</strong> NÃO solicita valores antecipados ou quaisquer tipo de pagamentos/transferÃªncias para contas que nÃ£o sejam de titularidade da <strong>FACTA FINANCEIRA</strong> 
                  &nbsp; com CNPJ de inscriÃ§Ã£o. Antes de realizar depÃ³sitos ou pagamentos, entre em contato conosco &nbsp; 0800.942.04.62 &nbsp; ou &nbsp;
                  (51) 3191.7318.
                </Label>
              </Col>
            </CardBody>
          </Card>

         { this.state.propostaINSS === true
          ?
           <>
					{ AF.Tipo_Operacao === 28
             ? (
              <>
               <Card className="border-white shadow" style={{borderRadius: '8px'}}>
                <CardBody className="text-left">
                 <h5 className="text-center border-bottom border-light pb-3">AutorizaÃ§Ã£o de DÃ©bito</h5>
                 <Row>
                  <Col xs="12" sm="12" xm="12">
                   <FormGroup check className="checkbox">
                    <Input className="form-check-input" type="checkbox" id="chkBoletos" name="autorizacao_boletos" value="1" defaultChecked onChange={this.handleChange} />
                    <Label check className="form-check-label text-justify" htmlFor="chkBoletos">
                     Eu, { this.state.obj_cliente.DESCRICAO }, <span className="font-weight-bold">AUTORIZO</span> a <span className="font-weight-bold">FACTA FINANCEIRA S.A. CFI</span>, inscrita no CNPJ sob o n. 15.581.638/0001-30, sediada na Rua dos Andradas, n. 1409, 7Âº
                     andar, em Porto Alegre/RS, CEP: 90020-022, a <span className="font-weight-bold">PAGAR BOLETOS DE COBRANÃA</span> E <span className="font-weight-bold">DEBITAR SEUS RESPECTIVOS VALORES</span> na Conta de Pagamento Facta, de <span className="font-weight-bold">minha titularidade</span>.
                    </Label>
                   </FormGroup>
                  </Col>
                 </Row>
                </CardBody>
               </Card>

               <Card className="border-white shadow" style={{borderRadius: '8px'}}>
                <CardBody className="text-left">
                 <h5 className="text-center border-bottom border-light pb-3">AutorizaÃ§Ã£o de TransferÃªncia</h5>
                 <Row>
                  <Col xs="12" sm="12" xm="12">
                   <FormGroup check className="checkbox">
                    <Input className="form-check-input" type="checkbox" id="chkTransferencias" name="autorizacao_transferencias" value="1" defaultChecked onChange={this.handleChange} />
                    <Label check className="form-check-label text-justify" htmlFor="chkTransferencias">
                     Eu, { this.state.obj_cliente.DESCRICAO }, <span className="font-weight-bold">AUTORIZO</span> a <span className="font-weight-bold">FACTA FINANCEIRA S.A. CFI</span>, inscrita no CNPJ sob o n. 15.581.638/0001-30, sediada na Rua dos Andradas, n. 1409, 7Âº
                     andar, em Porto Alegre/RS, CEP: 90020-022, a efetuar <span className="font-weight-bold">TRANSFERÃNCIAS DE VALORES</span> da Conta de Pagamento Facta, de <span className="font-weight-bold">minha titularidade</span>, para contas de mesma titularidade ou outra titularidade.
                    </Label>
                   </FormGroup>
                  </Col>
                 </Row>
                </CardBody>
               </Card>
              </>
             )
            : null
           }
            <Modal isOpen={this.state.mdlLgSeguro} toggle={this.toggleModalSeguro} className={'modal-lg ' + this.props.className}>
             <ModalHeader toggle={this.toggleModalSeguro}>
              <img src={ require('../../../assets/img/ass_seguradora_1024.png') } alt="Logo Facta Seguradora" style={{ maxWidth: '256px' }}/>
             </ModalHeader>
             <ModalBody>
              <p>
              1. Este seguro tem por objetivo garantir o pagamento de indenizaÃ§Ã£o ao credor em caso de ocorrÃªncia de evento coberto, equivalente ao saldo da dÃ­vida ou do compromisso assumido pelo segurado junto ao credor.
              </p>

              <p>
              2. Somente poderÃ£o contratar as coberturas oferecidas nos bilhetes deste plano de microsseguro as pessoas com idade mÃ­nima de 14 (quatorze) anos e mÃ¡xima de 80 (oitenta) anos.
              </p>

              <p>
              3. CARÃNCIA - PerÃ­odo, contado a partir da data de inÃ­cio de vigÃªncia do seguro, durante o qual, na ocorrÃªncia do sinistro, os beneficiÃ¡rios do segurado nÃ£o terÃ£o direito Ã  percepÃ§Ã£o dos capitais segurados contratados. NÃ£o hÃ¡ carÃªncia para este Plano de Microsseguro, exceto em caso de suicÃ­dio, que deverÃ¡ ser respeitada uma carÃªncia de 24 (vinte e quatro) meses.
              </p>

              <p>
              4. FRANQUIA: PerÃ­odo contÃ­nuo, determinado no bilhete, contado a partir da data do sinistro, durante o qual a Seguradora estarÃ¡ isenta de qualquer responsabilidade indenizatÃ³ria. NÃ£o hÃ¡ franquia para este Plano de Microsseguro.
              </p>

              <p>
              5. VIGÃNCIA: O perÃ­odo de vigÃªncia do seguro serÃ¡ igual ao prazo do contrato do emprÃ©stimo.
              </p>

              <p>
              6. SEGURADO: O capital segurado estÃ¡ na modalidade âvinculadoâ, pois o capital segurado serÃ¡ durante toda vigÃªncia, necessariamente, igual ao valor da obrigaÃ§Ã£o, sendo alterado automaticamente a cada amortizaÃ§Ã£o ou reajuste.
              </p>

              <p>
              7. ATUALIZAÃÃO DO CAPITAL SEGURADO: A periodicidade utilizada para o recÃ¡lculo do valor do Capital Segurado serÃ¡ mensal, refletindo a amortizaÃ§Ã£o e/ou reajuste ocorrido no contrato de emprÃ©stimo no decorrer do mÃªs anterior.
              </p>

              <p>
              8. RISCOS EXCLUÃDOS - EstÃ£o expressamente excluÃ­dos de todas as coberturas deste seguro os eventos ocorridos, direta ou indiretamente, em consequÃªncia de: a) atos ilÃ­citos dolosos praticados pelo segurado principal ou dependente, pelo beneficiÃ¡rio ou pelo representante legal de qualquer deles; b) suicÃ­dio ou sequelas decorrentes da sua tentativa, caso ocorram nos dois primeiros anos de vigÃªncia da cobertura; c) epidemia ou pandemia declarada por Ã³rgÃ£o competente; d) furacÃµes, ciclones, terremotos, maremotos, erupÃ§Ãµes vulcÃ¢nicas e outras convulsÃµes da natureza; e) danos e perdas causados por atos terroristas; f) atos ou operaÃ§Ãµes de guerra, declarada ou nÃ£o, de guerra quÃ­mica ou bacteriolÃ³gica, guerra civil, guerrilha; revoluÃ§Ã£o, motim, revolta, sediÃ§Ã£o, sublevaÃ§Ã£o ou outras perturbaÃ§Ãµes da ordem pÃºblica e delas decorrentes, exceto a prestaÃ§Ã£o de serviÃ§o militar e atos de humanidade em auxÃ­lio de outrem.
              </p>

              <p>
              9. "DOCUMENTAÃÃO PARA O RECEBIMENTO DE INDENIZAÃÃO â O prazo mÃ¡ximo para o pagamento da indenizaÃ§Ã£o Ã© de 10 (dez) dias corridos contados a partir da data de protocolo de entrega da documentaÃ§Ã£o comprobatÃ³ria, requerida nos documentos contratuais, junto Ã  Seguradora ou seu representante. Os documentos necessÃ¡rios Ã  liquidaÃ§Ã£o de sinistros sÃ£o os abaixo listados e deverÃ£o ser encaminhados Ã  Seguradora em vias originais ou cÃ³pias autenticadas:
              </p>

              <p>
              Cobertura Prestamista - Morte: Contrato entre segurado e credor, contendo descriÃ§Ã£o das prestaÃ§Ãµes periÃ³dicas decorrentes da dÃ­vida contraÃ­da ou do compromisso assumido pelo segurado junto ao credor; Extrato ou resumo fornecido pelo credor contendo valor presente das parcelas vincendas que corresponderÃ¡ ao saldo da dÃ­vida ou do compromisso na data do sinistro; FormulÃ¡rio de Aviso de Sinistro fornecido pela Seguradora, devidamente preenchido e assinado pelo representante legal do Segurado; CertidÃ£o de Ãbito do Segurado; Boletim de OcorrÃªncia Policial, se houver; Carteira Nacional de HabilitaÃ§Ã£o (CNH), na hipÃ³tese do sinistro envolver veÃ­culo dirigido pelo Segurado; Documento de identificaÃ§Ã£o do(s) beneficiÃ¡rio(s)."
              </p>

              <p>
              10. A contrataÃ§Ã£o do seguro Ã© opcional, sendo facultado ao segurado o seu cancelamento a qualquer tempo, com devoluÃ§Ã£o do prÃªmio pago referente ao perÃ­odo a decorrer, se houver.
              </p>

              <p>
              11. Na ocorrÃªncia de evento coberto, caso o valor da obrigaÃ§Ã£o financeira devida ao credor seja menor do que o valor a ser indenizado no seguro prestamista, a diferenÃ§a apurada serÃ¡ paga ao segundo beneficiÃ¡rio indicado, conforme dispuserem as condiÃ§Ãµes gerais. O segundo beneficiÃ¡rio poderÃ¡ ser livremente indicado pelo segurado no Bilhete. NÃ£o havendo indicaÃ§Ã£o, a indenizaÃ§Ã£o serÃ¡ paga conforme legislaÃ§Ã£o em vigor.
              </p>

              <p>
              12. Em caso de extinÃ§Ã£o antecipada da obrigaÃ§Ã£o, o seguro estarÃ¡ automaticamente cancelado, devendo a seguradora ser formalmente comunicada, sem prejuÃ­zo, se for o caso, da devoluÃ§Ã£o do prÃªmio pago referente ao perÃ­odo a decorrer.
              </p>

              <p>
              13. SUSEP â SuperintendÃªncia de Seguros Privados â Autarquia Federal responsÃ¡vel pela fiscalizaÃ§Ã£o, normatizaÃ§Ã£o e controle dos mercados de seguro, previdÃªncia complementar aberta, capitalizaÃ§Ã£o, resseguro e corretagem de seguros.
              </p>

              <p className="ml-5">
              O registro do plano deste seguro na SUSEP â SuperintendÃªncia de Seguros Privados nÃ£o implica, por parte da referida autarquia, incentivo ou recomendaÃ§Ã£o e sua comercializaÃ§Ã£o.
              </p>

              <p className="ml-5">
              No portal da SUSEP podem ser conferidas todas as informaÃ§Ãµes sobre o(s) plano(s) de seguro do bilhete contratado atravÃ©s do link http://www.susep.gov.br/menu/servicos-ao-cidadao/sistema-de-consulta-publica-de-produtos.
              </p>

              <p>
              Atendimento ao pÃºblico da SUSEP 0800 021 84 84 (dias Ãºteis, das 9:30 Ã s 17:00).
              </p>
              <p>
              SAC: 0800 942 04 62 ou 51 3191 7318 (segunda Ã  sexta-feira das 10h Ã s 16h), Ouvidoria: 0800 232 22 22 (segunda Ã  sexta-feira das 10h Ã s 16h) ou Acesse: <a href="https://www.factaseguradora.com.br" target="_blank" rel="noopener noreferrer">https://www.factaseguradora.com.br</a>
              </p>

             </ModalBody>
             <ModalFooter>
              <Button className="btn-block font-weight-bold mt-2" color="outline-secondary" onClick={this.toggleModalSeguro}>Fechar</Button>
             </ModalFooter>
            </Modal>
           </>
          : null
         }

         {
          this.state.obj_contratos !== undefined ? (
            this.state.obj_contratos.map(item => (
            <>
            <Card className="border-white shadow" style={{borderRadius: '8px'}}>
             <CardBody className="text-left">
              <h5 className="text-center mt-5 border-bottom border-light pb-3">Dados do Contrato { item.PROPOSTA }</h5>
              <Row>
               <Col xs="6" sm="6" xm="12">
                <label>Valor LÃ­quido do CrÃ©dito</label>
                <p className="font-weight-bold"> { parseFloat(item.VLRAF !== null ? item.VLRAF : 0).toLocaleString('pt-BR', formatoValor) }</p>
               </Col>
               <Col xs="6" sm="6" xm="12">
                <label>Quantidade de Parcelas</label>
                <p className="font-weight-bold"> { item.NUMEROPRESTACAO } </p>
               </Col>
              </Row>
              <Row>
               <Col xs="12" sm="12" xm="12">
                <label>Tarifa de Cadastro</label>
                <p className="font-weight-bold"> R$ 0,00 </p>
               </Col>
               <Col xs="6" sm="6" xm="12">
                <label>Seguro</label>
                <p className="font-weight-bold"> R$ 0,00 </p>
               </Col>
              </Row>
              <Row>
               <Col xs="6" sm="6" xm="12">
                <label>1Âª Parcela</label>
                <p className="font-weight-bold"><Moment format="DD/MM/YYYY">{item.DATAINICIO}</Moment></p>
               </Col>
               <Col xs="6" sm="6" xm="12">
                <label>IOF</label>
                <p className="font-weight-bold"> R$ 0,00 </p>
               </Col>
              </Row>
              <Row>
               <Col xs="6" sm="6" xm="12">
                <label>Ãltima Parcela</label>
                <p className="font-weight-bold"><Moment format="DD/MM/YYYY">{item.DATAFIM}</Moment></p>
               </Col>
               <Col xs="6" sm="6" xm="12">
                <label>IOF</label>
                <p className="font-weight-bold"> R$ 0,00 </p>
               </Col>
              </Row>
              <Row>
               <Col xs="12" sm="12" xm="12">
                <label>Valor Total de CrÃ©dito</label>
                <p className="font-weight-bold"> {
                 item.Tipo_Operacao === 2 || item.Tipo_Operacao === 14
                  ? parseFloat(item.saldoDevedor !== null ? item.saldoDevedor : 0).toLocaleString('pt-BR', formatoValor)
                  : parseFloat(item.VLRAF !== null ? item.VLRAF : 0).toLocaleString('pt-BR', formatoValor)
                 } </p>
               </Col>
               <Col xs="12" sm="12" xm="12">
                <label>Valor Total Devido</label>
                <p className="font-weight-bold">
                {
                 parseFloat(
                  (item.VLRPRESTACAO !== null && item.NUMEROPRESTACAO !== null ? item.VLRPRESTACAO * item.NUMEROPRESTACAO : 0)
                 ).toLocaleString('pt-BR', formatoValor)
                }
                </p>
               </Col>
              </Row>
              </CardBody>
             </Card>
             </>
            )
          )) : ( null )
         }

         <Card className="border-white shadow" style={{borderRadius: '8px'}}>
          <CardBody className="text-left pb-5">
           <h5 className="text-center border-bottom border-light pb-3">CLÃUSULAS E CONDIÃÃES</h5>
           <Row className="text-justify">
            <Col xs="12" sm="12" xm="12">
             <p>1. O Emitente pagarÃ¡ por esta CÃ©dula de CrÃ©dito BancÃ¡rio ("CÃ©dula") ao Credor ou Ã  sua ordem, na(s) data(s) de vencimento indicada(s) no Quadro IV do preÃ¢mbulo, em moeda corrente nacional, a quantia nele indicada, acrescida dos juros e demais encargos ajustados nesta CÃ©dula, nos termos da Lei 10.931/04 e das clÃ¡usulas e condiÃ§Ãµes enunciadas a seguir:</p>

             <p><span className="font-weight-bold">DA AUTORIZAÃÃO: </span></p>
             <p>1.1. DÃ©bito em folha de pagamento/benefÃ­cio: o Emitente autoriza o dÃ©bito das parcelas nos valores que lhes sÃ£o devidos a tÃ­tulo de salÃ¡rio ou benefÃ­cio, diretamente junto Ã  empresa ou Ã³rgÃ£o pagador. </p>
             <p>1.2. DÃ©bito em conta corrente: autoriza, desde jÃ¡, o dÃ©bito das parcelas em sua conta corrente informada no QUADRO V, obrigando-se a manter a suficiente provisÃ£o de fundos nas datas de vencimento das parcelas, desde a primeira atÃ© a Ãºltima prestaÃ§Ã£o. Em caso de alteraÃ§Ã£o do banco no qual recebe seu salÃ¡rio/benefÃ­cio ou conta corrente indicada para dÃ©bito, compromete-se a informar imediatamente ao credor as informaÃ§Ãµes da nova instituiÃ§Ã£o (banco, agÃªncia e conta) e desde jÃ¡ autoriza o credor a efetuar os dÃ©bitos. Caso ocorra alteraÃ§Ã£o bancÃ¡ria e o credor nÃ£o seja informado, fica desde jÃ¡ o credor autorizado a buscar junto aos bancos os novos dados para que sejam procedidos os dÃ©bitos. </p>
             <p>1.3. Boleto BancÃ¡rio: O emitente efetuarÃ¡ o pagamento atravÃ©s de boleto bancÃ¡rio emitido pelo credor. Fica definido que o nÃ£o recebimento em tempo hÃ¡bil do boleto, nÃ£o exime o emitente de efetuar o pagamento das parcelas nos vencimentos definidos no QUADRO IV. </p>
             <p>1.4. Cheques: O emitente entrega ao credor, como forma de pagamento cheques correspondente aos vencimentos , ao nÃºmero de parcelas e aos valores definidos no QUADRO IV. A quitaÃ§Ã£o da obrigaÃ§Ã£o de pagamento do Emitente somente se efetivarÃ¡ apÃ³s a compensaÃ§Ã£o dos referidos cheques.</p>

             <p><span className="font-weight-bold">DO PAGAMENTO: </span></p>
             <p>2. O Emitente suportarÃ¡ todos os tributos, encargos, despesas, Ã´nus e quaisquer outros custos que venham a incidir em razÃ£o da presente CÃ©dula, inclusive de registro da alienaÃ§Ã£o fiduciÃ¡ria e tarifas informadas e cobradas conforme as normas do Banco Central do Brasil e o Imposto sobre OperaÃ§Ãµes de CrÃ©dito, CÃ¢mbio e Seguro (âIOFâ), que serÃ¡ deduzido do valor disponibilizado em favor do Emitente, tendo, assim, pleno conhecimento do CET â Custo Efetivo Total da presente operaÃ§Ã£o de crÃ©dito e das tarifas de serviÃ§os apresentadas. </p>

             <p><span className="font-weight-bold">DA LIBERAÃÃO DE VALORES: </span></p>
             <p>3. O Emitente autoriza o credor a efetuar a liberaÃ§Ã£o do valor emprÃ©stimo por meio de crÃ©dito em conta corrente prÃ³pria ou de terceiros, por ele indicado, em caso de portabilidade de dÃ­vida na conta da instituiÃ§Ã£o financeira credora da operaÃ§Ã£o que estÃ¡ sendo portada. </p>

             <p><span className="font-weight-bold">DO INADIMPLEMENTO: </span></p>
             <p>4. Em caso de mora no pagamento de quaisquer valores devidos nos termos desta CÃ©dula, inclusive principal ou juros, sem prejuÃ­zo do disposto nas demais clÃ¡usulas da presente, incidirÃ£o sobre o saldo devedor devidamente atualizado os seguintes encargos: I) juros de mora Ã  razÃ£o de 1% (um por cento) ao mÃªs; II) multa nÃ£o compensatÃ³ria de 2% (dois por cento) sobre o montante dos dÃ©bitos. </p>

             <p><span className="font-weight-bold">DO VENCIMENTO ANTECIPADO: </span></p>
             <p>5. O Credor poderÃ¡ considerar a dÃ­vida representada por esta CÃ©dula vencida e exigÃ­vel de pleno direito, independentemente de interpelaÃ§Ã£o ou notificaÃ§Ã£o judicial ou extrajudicial, quando o Emitente deixar de cumprir as obrigaÃ§Ãµes aqui pactuadas. </p>

             <p><span className="font-weight-bold">DA LIQUIDAÃÃO ANTECIPADA: </span></p>
             <p>6. O Emitente poderÃ¡ amortizar ou liquidar antecipadamente o seu saldo devedor, com reduÃ§Ã£o proporcional dos juros e demais acrÃ©scimos, nos termos da legislaÃ§Ã£o aplicÃ¡vel, sendo o valor calculado a partir da taxa de juros pactuada na CCB. </p>

             <p><span className="font-weight-bold">DOS JUROS: </span></p>
             <p>7. O valor contratado serÃ¡ acrescido de juros remuneratÃ³rios capitalizados mensalmente Ã  taxa de juros estabelecida na proposta, na quantidade de parcelas, valores, data de vencimento, bem como tributos e encargos especificados na Proposta. </p>

             <p><span className="font-weight-bold">DA CONSULTA DE DADOS: </span></p>
             <p>8. O Emitente autoriza o Credor a consultar dados pessoais eventualmente encontrados no Sistema de InformaÃ§Ãµes Consolidadas da Central de Riscos do Banco Central - SIC/BACEN e em Ã³rgÃ£os de proteÃ§Ã£o ao credito, tais como Serasa/Experian, SCPC e AssociaÃ§Ã£o Comercial, bem como a fornecer seus dados a essas entidades ou a terceiros para fins de cobranÃ§a, podendo os dados serem utilizados pelos Ã³rgÃ£os de proteÃ§Ã£o ao crÃ©dito aqui mencionados, respeitadas as disposiÃ§Ãµes legais. </p>

             <p><span className="font-weight-bold">DA CESSÃO: </span></p>
             <p>9. O Credor poderÃ¡ emitir Certificado de CÃ©dulas de CrÃ©dito BancÃ¡rio - CCCB com lastro nesta CÃ©dula e negociÃ¡-lo livremente no mercado, bem como transferir esta CÃ©dula por endosso ou ceder a terceiros, no todo ou em parte, os direitos destas decorrentes, independentemente de qualquer aviso ou autorizaÃ§Ã£o de qualquer espÃ©cie. </p>

             <p><span className="font-weight-bold">DECLARAÃÃO: </span></p>
             <p>10. O Emitente declara: a) conhecer as normas do Banco Central do Brasil, que dispÃµem sobre os crimes de lavagem de dinheiro e as suas obrigaÃ§Ãµes; b) comunicar formalmente qualquer mudanÃ§a de propÃ³sito e natureza da relaÃ§Ã£o de negÃ³cios com a FACTA; c) nÃ£o participar direta ou indiretamente, com quaisquer formas de trabalho escravo e infantil, ou prÃ¡ticas danosas ao meio ambiente; d) serem verdadeiras todas as informaÃ§Ãµes prestados, assim como estÃ¡ ciente de todas os termos e condiÃ§Ãµes desta CCB.</p>
             <p>A presente CÃ©dula Ã© emitida em 3 vias, sendo que apenas a via do credor Ã© negociÃ¡vel.</p>
             <p>Declaro que li e compreendi todos os termos desta cÃ©dula de crÃ©dito bancÃ¡rio. Declaro, ainda, que recebi cÃ³pia da presente CÃ©dula</p>

            </Col>
           </Row>

           <Row className="mb-3 mt-3">
            <Col xs="12" sm="12">
             <Button className="btn-block font-weight-bold" color="outline-primary" size="lg" onClick={this.salvaImgCcb} disabled={this.state.clicou}>
              Eu <strong>li</strong> e <strong>aceito</strong> os termos
             </Button>
            </Col>
           </Row>
          </CardBody>
         </Card>
        </Col>
       </Row>

      </Col>
     </>
    : <PaginaMensagemLocalizacao />
    )
   }
   </div>
  );
 }
}

export default CedulaFactaPrfPoa;
